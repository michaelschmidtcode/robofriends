{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/Searchbox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","CardList","robots","map","user","i","Searchbox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","Component","App","onSearchChange","event","setState","searchField","target","value","fetch","respone","json","users","filterRobotos","filter","robot","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,iDCOCQ,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACxB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCKLK,EAVE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAClB,OACG,cAAC,WAAD,UACKA,EAAOC,KAAI,SAACC,EAAMC,GACf,OAAO,cAAC,EAAD,CAAcR,GAAIK,EAAOG,GAAGR,GAAIF,KAAOO,EAAOG,GAAGV,KAAMC,MAAOM,EAAOG,GAAGT,OAA7DS,SCQfC,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKT,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCXI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,YCiBJC,E,kDAnBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKJ,MAAMC,UAAW,I,oBAG1B,WACI,OAAGG,KAAKJ,MAAMC,SACH,0DAEAG,KAAKX,MAAMK,a,GAhBHO,aC+CZC,G,wDAzCX,aAAc,IAAD,8BACT,gBAaJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACC,YAAcF,EAAMG,OAAOC,SAb1C,EAAKZ,MAAQ,CACTjB,OAAQ,GACR2B,YAAa,IAJR,E,qDAQb,WAAoB,IAAD,OACfG,MAAM,8CACL5C,MAAK,SAAA6C,GAAO,OAAIA,EAAQC,UACxB9C,MAAK,SAAA+C,GAAK,OAAI,EAAKP,SAAS,CAAC1B,OAAQiC,S,oBAO1C,WAAS,IAAD,EAC0BZ,KAAKJ,MAA5BjB,EADH,EACGA,OAAQ2B,EADX,EACWA,YACTO,EAAgBlC,EAAOmC,QAAO,SAAAC,GAChC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASX,EAAYU,kBAGzD,OAAQrC,EAAOuC,OAGP,sBAAK3C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAgBgB,KAAKG,iBAChC,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUxB,OAAUkC,WAPpC,qBAAKtC,UAAU,KAAf,SAAoB,+C,GA1Bd0B,cCAlBkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B7D,M","file":"static/js/main.7c99987d.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nconst Card = ({name, email, id}) => {\n    return (\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt=\"robots\" src={`https://robohash.org/${id}?200x200`}/>\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React, {Fragment} from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n return ( \n    <Fragment>\n        {robots.map((user, i) => {\n            return <Card key={i} id={robots[i].id} name ={robots[i].name} email={robots[i].email}/>\n        })}\n    </Fragment>\n );\n}\n\nexport default CardList;","import React from 'react';\n\nconst Searchbox = ({searchChange}) => {\n    return (\n        <div className='pa2'>\n            <input \n                className='pa3 ba b--green bg-lightest-blue' \n                type='search' \n                placeholder='search robots' \n                onChange={searchChange}\n            />\n        </div>\n    );\n}\n\nexport default Searchbox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '600px'}}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Scroll;","import React, {Component} from 'react';\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info){\n        this.state.hasError = true;\n    }\n\n    render(){\n        if(this.state.hasError)\n            return <h1>Oooops. That is not good</h1>;\n        else \n            return this.props.children;\n    }\n}\n\nexport default ErrorBoundry;","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport Searchbox from '../components/Searchbox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\n\nclass App extends Component {\n    constructor(){\n        super();\n        this.state = {\n            robots: [],\n            searchField: ''    \n        }\n    }\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(respone => respone.json())\n        .then(users => this.setState({robots: users}));\n    }\n\n    onSearchChange = (event) => {\n        this.setState({searchField : event.target.value});\n    }\n\n    render(){\n        const {robots, searchField} = this.state;\n        const filterRobotos = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\n        });\n\n        return !robots.length ? \n            <div className=\"tc\"><h1>Loading</h1></div> :\n            (\n                <div className=\"tc\">\n                    <h1 className=\"f1\">RoboFriends</h1>\n                    <Searchbox searchChange = {this.onSearchChange}/>\n                    <Scroll>\n                        <ErrorBoundry>\n                            <CardList robots = {filterRobotos}/>\n                        </ErrorBoundry>\n                    </Scroll>\n                </div>\n            );\n        \n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport './index.css';\nimport App from './containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}